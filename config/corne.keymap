/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        workman {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB         &kp Q  &kp D  &kp R  &kp W      &kp B               &kp J      &kp F          &kp U      &kp P    &kp SEMICOLON  &kp ESC
&kp EQUAL       &kp A  &kp S  &kp H  &kp T      &kp G               &kp Y      &kp N          &kp E      &kp O    &kp I          &kp SQT
&kp LEFT_SHIFT  &kp Z  &kp X  &kp M  &kp C      &kp V               &kp K      &kp L          &kp COMMA  &kp DOT  &kp FSLH       &kp RIGHT_SHIFT
                              &mo 1  &kp SPACE  &kp LEFT_CONTROL    &kp ENTER  &kp BACKSPACE  &mo 2
            >;
        };

        num {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL        &kp AT           &kp HASH          &kp DOLLAR         &kp PERCENT         &kp CARET     &kp AMPERSAND  &kp STAR   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp ESCAPE
&kp EQUAL  &kp NUMBER_1    &kp NUMBER_2     &kp NUMBER_3      &kp NUMBER_4       &kp N5              &kp NUMBER_6  &kp N7         &kp N8     &kp N9                &kp N0                 &kp MINUS
&kp LSHFT  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp UNDER           &kp GRAVE     &kp PLUS       &kp COMMA  &kp PERIOD            &kp SLASH              &kp RIGHT_SHIFT
                                            &trans            &kp SPACE          &kp LEFT_CONTROL    &kp RETURN    &kp BACKSPACE  &to 3
            >;
        };

        func {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &kp F4     &kp F5              &kp F6      &kp F7          &kp F8          &kp F9        &kp F10          &trans
&trans  &kp A   &kp S   &kp W   &kp D      &trans              &trans      &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans
&trans  &trans  &trans  &trans  &trans     &trans              &trans      &trans          &trans          &trans        &trans           &trans
                        &trans  &kp SPACE  &kp LEFT_CONTROL    &kp RETURN  &kp BACKSPACE   &trans
            >;
        };

        qwerty {
            bindings = <
&kp TAB         &kp Q  &kp W  &kp E  &kp R      &kp T               &kp Y       &kp U          &kp I      &kp O    &kp P          &kp ESC
&kp EQUAL       &kp A  &kp S  &kp D  &kp F      &kp G               &kp H       &kp J          &kp K      &kp L    &kp SEMICOLON  &kp SQT
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C  &kp V      &kp B               &kp N       &kp M          &kp COMMA  &kp DOT  &kp FSLH       &kp RIGHT_SHIFT
                              &mo 4  &kp SPACE  &kp LEFT_CONTROL    &kp RETURN  &kp BACKSPACE  &mo 2
            >;
        };

        num_qwerty {
            bindings = <
&kp TAB    &kp EXCL        &kp AT           &kp HASH          &kp DOLLAR         &kp PERCENT         &kp CARET     &kp AMPERSAND  &kp STAR   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp ESCAPE
&kp EQUAL  &kp NUMBER_1    &kp NUMBER_2     &kp NUMBER_3      &kp NUMBER_4       &kp N5              &kp NUMBER_6  &kp N7         &kp N8     &kp N9                &kp N0                 &kp MINUS
&kp LSHFT  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp UNDER           &kp GRAVE     &kp PLUS       &kp COMMA  &kp PERIOD            &kp SLASH              &kp RIGHT_SHIFT
                                            &trans            &kp SPACE          &kp LEFT_CONTROL    &kp RETURN    &kp BACKSPACE  &to 0
            >;
        };
    };
};
